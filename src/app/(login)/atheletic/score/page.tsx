"use client";

import moment from "moment";
import Link from "next/link";
import React, { DetailedHTMLProps, HTMLAttributes } from "react";

import { alert } from "@/utils/alert";
import instance from "@/utils/instance";

const Score = () => {
  const [loading, setLoading] = React.useState(false);
  const [autoRefresh, setAutoRefresh] = React.useState(false);
  const [time, setTime] = React.useState<moment.Moment>(moment());
  const [score, setScore] = React.useState({
    white: 0,
    blue: 0,
  });
  const [scoreDescriptions, setScoreDescriptions] = React.useState<{
    team: "white" | "blue";
    score: number;
    description: string;
  }[]>([]);
  const [eventCurrent, setEventCurrent] = React.useState("");
  const [eventScore, setEventScore] = React.useState({
    white: 0,
    blue: 0,
  });
  const [eventSetsScore, setEventSetsScore] = React.useState({
    white: 0,
    blue: 0,
  });
  const [eventTeams, setEventTeams] = React.useState<{
    left: string;
    right: string;
  }>({
    left: "",
    right: "",
  });

  const getScore = async () => {
    setLoading(true);
    try{
      const { data } = await instance.get("/api/atheletic/score");
      setTime(moment());
      setScore(data.data.count);
      setScoreDescriptions(data.data.getDescriptions);
    }
    catch(e){
      console.error(e);
    }
    setLoading(false);
  };

  const getEventScore = async () => {
    try{
      const { data } = await instance.get("/api/atheletic/set_score");
      await getEventCurrent();
      await getEventTeams();
      setEventScore(data.data.score);
      setEventSetsScore(data.data.sets);
    }
    catch(e){
      console.error(e);
    }
  };

  const getEventTeams = async () => {
    try{
      const { data } = await instance.get("/api/atheletic/teams");
      setEventTeams(data.data);
    }
    catch(e){
      console.error(e);
    }
  };

  const getEventCurrent = async () => {
    try{
      const { data } = await instance.get("/api/atheletic/current");
      setEventCurrent(data.data);
    }
    catch(e){
      console.error(e);
    }
  };

  const refersh = () => {
    getScore();
    getEventScore();
    getEventCurrent();
    getEventTeams();
  };

  React.useEffect(() => {
    refersh();
  }, []);

  const sum = score.blue + score.white;
  const start = (score.blue * 100 / sum) || 0;
  const end = (score.white * 100 / sum) || 0;

  const eventSetSum = eventSetsScore.blue + eventSetsScore.white;
  const eventSetStart = (eventSetsScore.blue * 100 / eventSetSum) || 0;
  const eventSetEnd = (eventSetsScore.white * 100 / eventSetSum) || 0;

  React.useEffect(() => {
    const interval = setInterval(() => {
      if(autoRefresh) refersh();
    }, 3000);
    if(autoRefresh) alert.info("3초마다 자동 갱신됩니다.");
    return () => clearInterval(interval);
  }, [autoRefresh]);

  return (
    <>
      <article className="flex flex-col gap-3">
        <div className="flex flex-row items-center justify-between">
          <div className="flex flex-row items-center">
            <h1 className="text-xl font-semibold">전체 점수 현황</h1>
            {
              autoRefresh ? null : (
                <div className={[
                  "hover:font-semibold cursor-pointer transition-all h-7 w-7 flex items-center justify-center",
                  loading ? "rotation" : "",
                ].join(" ")} onClick={refersh}>
                  <svg width="14" height="14" viewBox="0 0 17 17" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M8.69922 16.8835C6.46589 16.8835 4.57422 16.1085 3.02422 14.5585C1.47422 13.0085 0.699219 11.1169 0.699219 8.88354C0.699219 6.65021 1.47422 4.75855 3.02422 3.20854C4.57422 1.65854 6.46589 0.883545 8.69922 0.883545C9.84922 0.883545 10.9492 1.12104 11.9992 1.59604C13.0492 2.07104 13.9492 2.75021 14.6992 3.63354V1.88354C14.6992 1.60021 14.7951 1.36271 14.9867 1.17104C15.1784 0.979378 15.4159 0.883545 15.6992 0.883545C15.9826 0.883545 16.2201 0.979378 16.4117 1.17104C16.6034 1.36271 16.6992 1.60021 16.6992 1.88354V6.88354C16.6992 7.16688 16.6034 7.40438 16.4117 7.59605C16.2201 7.78771 15.9826 7.88354 15.6992 7.88354H10.6992C10.4159 7.88354 10.1784 7.78771 9.98672 7.59605C9.79505 7.40438 9.69922 7.16688 9.69922 6.88354C9.69922 6.60021 9.79505 6.36271 9.98672 6.17104C10.1784 5.97938 10.4159 5.88354 10.6992 5.88354H13.8992C13.3659 4.95021 12.6367 4.21688 11.7117 3.68354C10.7867 3.15021 9.78255 2.88354 8.69922 2.88354C7.03255 2.88354 5.61589 3.46688 4.44922 4.63354C3.28255 5.80021 2.69922 7.21688 2.69922 8.88354C2.69922 10.5502 3.28255 11.9669 4.44922 13.1335C5.61589 14.3002 7.03255 14.8835 8.69922 14.8835C9.83255 14.8835 10.8701 14.596 11.8117 14.021C12.7534 13.446 13.4826 12.6752 13.9992 11.7085C14.1326 11.4752 14.3201 11.3127 14.5617 11.221C14.8034 11.1294 15.0492 11.1252 15.2992 11.2085C15.5659 11.2919 15.7576 11.4669 15.8742 11.7335C15.9909 12.0002 15.9826 12.2502 15.8492 12.4835C15.1659 13.8169 14.1909 14.8835 12.9242 15.6835C11.6576 16.4835 10.2492 16.8835 8.69922 16.8835Z" fill="rgb(var(--color-primary) / 1)"/>
                  </svg>
                </div>
              )
            }
            <div className={[
              "hover:font-semibold cursor-pointer transition-all h-7 w-7 flex items-center justify-center",
              loading ? "rotation" : "",
              autoRefresh ? "" : "-mx-1"
            ].join(" ")} onClick={() => {
              setAutoRefresh(p => !p);
            }}>
              {
                autoRefresh ? (
                  <svg width="16" height="16" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M8.99414 13.8862C8.71081 13.8862 8.47331 13.7903 8.28164 13.5987C8.08997 13.407 7.99414 13.1695 7.99414 12.8862V8.88616C7.99414 8.60282 8.08997 8.36532 8.28164 8.17366C8.47331 7.98199 8.71081 7.88616 8.99414 7.88616H12.9941C13.2775 7.88616 13.515 7.98199 13.7066 8.17366C13.8983 8.36532 13.9941 8.60282 13.9941 8.88616V12.8862C13.9941 13.1695 13.8983 13.407 13.7066 13.5987C13.515 13.7903 13.2775 13.8862 12.9941 13.8862H8.99414ZM1.99414 17.1862V18.8862C1.99414 19.1695 1.89831 19.407 1.70664 19.5987C1.51497 19.7903 1.27747 19.8862 0.994141 19.8862C0.710807 19.8862 0.473307 19.7903 0.281641 19.5987C0.089974 19.407 -0.00585938 19.1695 -0.00585938 18.8862V14.8862C-0.00585938 14.6028 0.089974 14.3653 0.281641 14.1737C0.473307 13.982 0.710807 13.8862 0.994141 13.8862H4.99414C5.27747 13.8862 5.51497 13.982 5.70664 14.1737C5.89831 14.3653 5.99414 14.6028 5.99414 14.8862C5.99414 15.1695 5.89831 15.407 5.70664 15.5987C5.51497 15.7903 5.27747 15.8862 4.99414 15.8862H3.54414C4.39414 17.1362 5.47331 18.1153 6.78164 18.8237C8.08997 19.532 9.49414 19.8862 10.9941 19.8862C12.7275 19.8862 14.3108 19.4362 15.7441 18.5362C17.1775 17.6362 18.2775 16.4278 19.0441 14.9112C19.1941 14.6278 19.39 14.4028 19.6316 14.2362C19.8733 14.0695 20.1525 14.0195 20.4691 14.0862C20.7691 14.1528 20.965 14.3237 21.0566 14.5987C21.1483 14.8737 21.1191 15.1695 20.9691 15.4862C20.0691 17.4195 18.7275 18.9695 16.9441 20.1362C15.1608 21.3028 13.1775 21.8862 10.9941 21.8862C9.19414 21.8862 7.50664 21.4737 5.93164 20.6487C4.35664 19.8237 3.04414 18.6695 1.99414 17.1862ZM1.06914 9.88616C0.785807 9.88616 0.556641 9.78199 0.381641 9.57366C0.206641 9.36532 0.144141 9.11949 0.194141 8.83616C0.360807 8.05282 0.577474 7.33199 0.844141 6.67366C1.11081 6.01532 1.46914 5.35282 1.91914 4.68616C2.08581 4.43616 2.30247 4.29449 2.56914 4.26116C2.83581 4.22782 3.07747 4.31949 3.29414 4.53616C3.52747 4.76949 3.64414 5.02366 3.64414 5.29866C3.64414 5.57366 3.55247 5.85282 3.36914 6.13616C3.08581 6.56949 2.86081 7.00282 2.69414 7.43616C2.52747 7.86949 2.37747 8.34449 2.24414 8.86116C2.17747 9.16116 2.03997 9.40699 1.83164 9.59866C1.62331 9.79032 1.36914 9.88616 1.06914 9.88616ZM9.99414 0.936155C9.99414 1.25282 9.89831 1.51116 9.70664 1.71116C9.51497 1.91116 9.26081 2.04449 8.94414 2.11116C8.44414 2.22782 7.98164 2.37782 7.55664 2.56116C7.13164 2.74449 6.70247 2.97782 6.26914 3.26116C6.00247 3.44449 5.73164 3.52782 5.45664 3.51116C5.18164 3.49449 4.92747 3.36949 4.69414 3.13616C4.49414 2.93616 4.40664 2.70699 4.43164 2.44866C4.45664 2.19032 4.58581 1.96949 4.81914 1.78616C5.46914 1.35282 6.11497 0.998655 6.75664 0.723655C7.39831 0.448655 8.11081 0.236155 8.89414 0.0861553C9.19414 0.0361553 9.45247 0.0944887 9.66914 0.261155C9.88581 0.427822 9.99414 0.652822 9.99414 0.936155ZM17.3441 3.13616C17.1108 3.36949 16.8525 3.49032 16.5691 3.49866C16.2858 3.50699 16.0108 3.41949 15.7441 3.23616C15.3108 2.95282 14.8775 2.72782 14.4441 2.56116C14.0108 2.39449 13.5358 2.24449 13.0191 2.11116C12.7191 2.04449 12.4733 1.90699 12.2816 1.69866C12.09 1.49032 11.9941 1.23616 11.9941 0.936155C11.9941 0.652822 12.0983 0.427822 12.3066 0.261155C12.515 0.0944887 12.7608 0.0361553 13.0441 0.0861553C13.8441 0.236155 14.5691 0.444489 15.2191 0.711155C15.8691 0.977822 16.5275 1.33616 17.1941 1.78616C17.4275 1.95282 17.5608 2.16949 17.5941 2.43616C17.6275 2.70282 17.5441 2.93616 17.3441 3.13616ZM20.9441 9.88616C20.6275 9.88616 20.3691 9.79032 20.1691 9.59866C19.9691 9.40699 19.8358 9.15282 19.7691 8.83616C19.6358 8.31949 19.4816 7.84866 19.3066 7.42366C19.1316 6.99866 18.9025 6.56116 18.6191 6.11116C18.4358 5.84449 18.3525 5.57366 18.3691 5.29866C18.3858 5.02366 18.5108 4.76949 18.7441 4.53616C18.9441 4.33616 19.1733 4.25282 19.4316 4.28616C19.69 4.31949 19.9108 4.45282 20.0941 4.68616C20.5441 5.35282 20.9025 6.01116 21.1691 6.66116C21.4358 7.31116 21.6441 8.03616 21.7941 8.83616C21.8441 9.11949 21.7858 9.36532 21.6191 9.57366C21.4525 9.78199 21.2275 9.88616 20.9441 9.88616Z" fill="rgb(var(--color-primary) / 1)"/>
                  </svg>
                ) : (
                  <svg width="16" height="16" viewBox="0 0 23 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M9.08398 14.5349V7.38489C9.08398 7.18489 9.17148 7.03489 9.34648 6.93489C9.52148 6.83489 9.69232 6.84322 9.85898 6.95989L15.434 10.5349C15.584 10.6349 15.659 10.7766 15.659 10.9599C15.659 11.1432 15.584 11.2849 15.434 11.3849L9.85898 14.9599C9.69232 15.0766 9.52148 15.0849 9.34648 14.9849C9.17148 14.8849 9.08398 14.7349 9.08398 14.5349ZM2.58398 17.2599V18.9599C2.58398 19.2432 2.48815 19.4807 2.29648 19.6724C2.10482 19.8641 1.86732 19.9599 1.58398 19.9599C1.30065 19.9599 1.06315 19.8641 0.871484 19.6724C0.679818 19.4807 0.583984 19.2432 0.583984 18.9599V14.9599C0.583984 14.6766 0.679818 14.4391 0.871484 14.2474C1.06315 14.0557 1.30065 13.9599 1.58398 13.9599H5.58398C5.86732 13.9599 6.10482 14.0557 6.29648 14.2474C6.48815 14.4391 6.58398 14.6766 6.58398 14.9599C6.58398 15.2432 6.48815 15.4807 6.29648 15.6724C6.10482 15.8641 5.86732 15.9599 5.58398 15.9599H4.13398C4.98398 17.2099 6.06315 18.1891 7.37148 18.8974C8.67982 19.6057 10.084 19.9599 11.584 19.9599C13.3173 19.9599 14.9007 19.5099 16.334 18.6099C17.7673 17.7099 18.8673 16.5016 19.634 14.9849C19.784 14.7016 19.9798 14.4766 20.2215 14.3099C20.4632 14.1432 20.7423 14.0932 21.059 14.1599C21.359 14.2266 21.5548 14.3974 21.6465 14.6724C21.7382 14.9474 21.709 15.2432 21.559 15.5599C20.659 17.4932 19.3173 19.0432 17.534 20.2099C15.7507 21.3766 13.7673 21.9599 11.584 21.9599C9.78398 21.9599 8.09648 21.5474 6.52148 20.7224C4.94648 19.8974 3.63398 18.7432 2.58398 17.2599ZM1.65898 9.95989C1.37565 9.95989 1.14648 9.85572 0.971484 9.64739C0.796484 9.43905 0.733984 9.19322 0.783984 8.90989C0.950651 8.12655 1.16732 7.40572 1.43398 6.74739C1.70065 6.08905 2.05898 5.42655 2.50898 4.75989C2.67565 4.50989 2.89232 4.36822 3.15898 4.33489C3.42565 4.30155 3.66732 4.39322 3.88398 4.60989C4.11732 4.84322 4.23398 5.09739 4.23398 5.37239C4.23398 5.64739 4.14232 5.92655 3.95898 6.20989C3.67565 6.64322 3.45065 7.07655 3.28398 7.50989C3.11732 7.94322 2.96732 8.41822 2.83398 8.93489C2.76732 9.23489 2.62982 9.48072 2.42148 9.67239C2.21315 9.86405 1.95898 9.95989 1.65898 9.95989ZM10.584 1.00989C10.584 1.32655 10.4882 1.58489 10.2965 1.78489C10.1048 1.98489 9.85065 2.11822 9.53398 2.18489C9.03398 2.30155 8.57148 2.45155 8.14648 2.63489C7.72148 2.81822 7.29232 3.05155 6.85898 3.33489C6.59232 3.51822 6.32148 3.60155 6.04648 3.58489C5.77148 3.56822 5.51732 3.44322 5.28398 3.20989C5.08398 3.00989 4.99648 2.78072 5.02148 2.52239C5.04648 2.26405 5.17565 2.04322 5.40898 1.85989C6.05898 1.42655 6.70482 1.07239 7.34648 0.797386C7.98815 0.522386 8.70065 0.309886 9.48398 0.159886C9.78398 0.109886 10.0423 0.168219 10.259 0.334886C10.4757 0.501552 10.584 0.726552 10.584 1.00989ZM17.934 3.20989C17.7007 3.44322 17.4423 3.56405 17.159 3.57239C16.8757 3.58072 16.6007 3.49322 16.334 3.30989C15.9007 3.02655 15.4673 2.80155 15.034 2.63489C14.6007 2.46822 14.1257 2.31822 13.609 2.18489C13.309 2.11822 13.0632 1.98072 12.8715 1.77239C12.6798 1.56405 12.584 1.30989 12.584 1.00989C12.584 0.726552 12.6882 0.501552 12.8965 0.334886C13.1048 0.168219 13.3507 0.109886 13.634 0.159886C14.434 0.309886 15.159 0.518219 15.809 0.784886C16.459 1.05155 17.1173 1.40989 17.784 1.85989C18.0173 2.02655 18.1507 2.24322 18.184 2.50989C18.2173 2.77655 18.134 3.00989 17.934 3.20989ZM21.534 9.95989C21.2173 9.95989 20.959 9.86405 20.759 9.67239C20.559 9.48072 20.4257 9.22655 20.359 8.90989C20.2257 8.39322 20.0715 7.92239 19.8965 7.49739C19.7215 7.07239 19.4923 6.63489 19.209 6.18489C19.0257 5.91822 18.9423 5.64739 18.959 5.37239C18.9757 5.09739 19.1007 4.84322 19.334 4.60989C19.534 4.40989 19.7632 4.32655 20.0215 4.35989C20.2798 4.39322 20.5007 4.52655 20.684 4.75989C21.134 5.42655 21.4923 6.08489 21.759 6.73489C22.0257 7.38489 22.234 8.10989 22.384 8.90989C22.434 9.19322 22.3757 9.43905 22.209 9.64739C22.0423 9.85572 21.8173 9.95989 21.534 9.95989Z" fill="rgb(var(--color-primary) / 1)"/>
                  </svg>
                )
              }
            </div>
          </div>
          <Link
            href="/atheletic/fullscreen"
            prefetch
          >
            <div className={[
              "hover:font-semibold cursor-pointer transition-all h-7 w-7 flex items-center justify-center",
            ].join(" ")}>
              <svg width="14" height="14" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M2.42383 16.1471H4.42383C4.70716 16.1471 4.94466 16.2429 5.13633 16.4346C5.32799 16.6263 5.42383 16.8638 5.42383 17.1471C5.42383 17.4304 5.32799 17.6679 5.13633 17.8596C4.94466 18.0513 4.70716 18.1471 4.42383 18.1471H1.42383C1.14049 18.1471 0.902995 18.0513 0.711328 17.8596C0.519661 17.6679 0.423828 17.4304 0.423828 17.1471V14.1471C0.423828 13.8638 0.519661 13.6263 0.711328 13.4346C0.902995 13.2429 1.14049 13.1471 1.42383 13.1471C1.70716 13.1471 1.94466 13.2429 2.13633 13.4346C2.32799 13.6263 2.42383 13.8638 2.42383 14.1471V16.1471ZM16.4238 16.1471V14.1471C16.4238 13.8638 16.5197 13.6263 16.7113 13.4346C16.903 13.2429 17.1405 13.1471 17.4238 13.1471C17.7072 13.1471 17.9447 13.2429 18.1363 13.4346C18.328 13.6263 18.4238 13.8638 18.4238 14.1471V17.1471C18.4238 17.4304 18.328 17.6679 18.1363 17.8596C17.9447 18.0513 17.7072 18.1471 17.4238 18.1471H14.4238C14.1405 18.1471 13.903 18.0513 13.7113 17.8596C13.5197 17.6679 13.4238 17.4304 13.4238 17.1471C13.4238 16.8638 13.5197 16.6263 13.7113 16.4346C13.903 16.2429 14.1405 16.1471 14.4238 16.1471H16.4238ZM2.42383 2.14709V4.14709C2.42383 4.43043 2.32799 4.66793 2.13633 4.85959C1.94466 5.05126 1.70716 5.14709 1.42383 5.14709C1.14049 5.14709 0.902995 5.05126 0.711328 4.85959C0.519661 4.66793 0.423828 4.43043 0.423828 4.14709V1.14709C0.423828 0.863761 0.519661 0.626261 0.711328 0.434595C0.902995 0.242928 1.14049 0.147095 1.42383 0.147095H4.42383C4.70716 0.147095 4.94466 0.242928 5.13633 0.434595C5.32799 0.626261 5.42383 0.863761 5.42383 1.14709C5.42383 1.43043 5.32799 1.66793 5.13633 1.85959C4.94466 2.05126 4.70716 2.14709 4.42383 2.14709H2.42383ZM16.4238 2.14709H14.4238C14.1405 2.14709 13.903 2.05126 13.7113 1.85959C13.5197 1.66793 13.4238 1.43043 13.4238 1.14709C13.4238 0.863761 13.5197 0.626261 13.7113 0.434595C13.903 0.242928 14.1405 0.147095 14.4238 0.147095H17.4238C17.7072 0.147095 17.9447 0.242928 18.1363 0.434595C18.328 0.626261 18.4238 0.863761 18.4238 1.14709V4.14709C18.4238 4.43043 18.328 4.66793 18.1363 4.85959C17.9447 5.05126 17.7072 5.14709 17.4238 5.14709C17.1405 5.14709 16.903 5.05126 16.7113 4.85959C16.5197 4.66793 16.4238 4.43043 16.4238 4.14709V2.14709Z" fill="rgb(var(--color-text) / 1)"/>
              </svg>
            </div>
          </Link>
        </div>
        <section 
          className={[
            "rounded overflow-hidden flex flex-row",
            "bg-gradient-to-r from-[#6466F1] to-[#adadad]"
          ].join(" ")}
          style={{
            "--tw-gradient-from-position": `${start - 50}%`,
            "--tw-gradient-to-position": `${150 - end}%`,
          } as DetailedHTMLProps<HTMLAttributes<HTMLElement>, HTMLElement>}
        >
          {
            [score.blue, score.white].map((v, i) => {
              const percent = (v * 100 / sum) || 0;
              return (
                <article 
                  key={i}
                  className={[
                    "h-full transition-all px-4 py-3 flex flex-col justify-center select-none cursor-pointe w-full",
                    i === 0 ? "items-start" : "items-end"
                  ].join(" ")}
                >
                  <p className="text-sm whitespace-nowrap text-[#fff]">
                    {i === 0 ? "📘 청팀" : "백팀 📖"}
                  </p>
                  <figure className="flex flex-row items-end gap-1">
                    <p className="text-2xl font-semibold whitespace-nowrap text-[#fff]">{v === -1 ? "Loading" : v.toLocaleString()}</p>
                    <p className="text-sm -translate-y-1 whitespace-nowrap text-[#fff]">점</p>
                  </figure>
                  <p className="text-sm whitespace-nowrap text-[#fff]">{Math.floor(percent)}%</p>
                </article>
              );
            })
          }
        </section>
      </article>
      <article className="flex flex-col gap-3">
        <div className="flex flex-row items-center justify-between">
          <div className="flex flex-row items-center">
            <h1 className="text-xl font-semibold">{eventCurrent || "진행 경기"} 점수 현황</h1>
            {
              autoRefresh ? null : (
                <div className={[
                  "hover:font-semibold cursor-pointer transition-all h-7 w-7 flex items-center justify-center",
                  loading ? "rotation" : "",
                ].join(" ")} onClick={refersh}>
                  <svg width="14" height="14" viewBox="0 0 17 17" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M8.69922 16.8835C6.46589 16.8835 4.57422 16.1085 3.02422 14.5585C1.47422 13.0085 0.699219 11.1169 0.699219 8.88354C0.699219 6.65021 1.47422 4.75855 3.02422 3.20854C4.57422 1.65854 6.46589 0.883545 8.69922 0.883545C9.84922 0.883545 10.9492 1.12104 11.9992 1.59604C13.0492 2.07104 13.9492 2.75021 14.6992 3.63354V1.88354C14.6992 1.60021 14.7951 1.36271 14.9867 1.17104C15.1784 0.979378 15.4159 0.883545 15.6992 0.883545C15.9826 0.883545 16.2201 0.979378 16.4117 1.17104C16.6034 1.36271 16.6992 1.60021 16.6992 1.88354V6.88354C16.6992 7.16688 16.6034 7.40438 16.4117 7.59605C16.2201 7.78771 15.9826 7.88354 15.6992 7.88354H10.6992C10.4159 7.88354 10.1784 7.78771 9.98672 7.59605C9.79505 7.40438 9.69922 7.16688 9.69922 6.88354C9.69922 6.60021 9.79505 6.36271 9.98672 6.17104C10.1784 5.97938 10.4159 5.88354 10.6992 5.88354H13.8992C13.3659 4.95021 12.6367 4.21688 11.7117 3.68354C10.7867 3.15021 9.78255 2.88354 8.69922 2.88354C7.03255 2.88354 5.61589 3.46688 4.44922 4.63354C3.28255 5.80021 2.69922 7.21688 2.69922 8.88354C2.69922 10.5502 3.28255 11.9669 4.44922 13.1335C5.61589 14.3002 7.03255 14.8835 8.69922 14.8835C9.83255 14.8835 10.8701 14.596 11.8117 14.021C12.7534 13.446 13.4826 12.6752 13.9992 11.7085C14.1326 11.4752 14.3201 11.3127 14.5617 11.221C14.8034 11.1294 15.0492 11.1252 15.2992 11.2085C15.5659 11.2919 15.7576 11.4669 15.8742 11.7335C15.9909 12.0002 15.9826 12.2502 15.8492 12.4835C15.1659 13.8169 14.1909 14.8835 12.9242 15.6835C11.6576 16.4835 10.2492 16.8835 8.69922 16.8835Z" fill="rgb(var(--color-primary) / 1)"/>
                  </svg>
                </div>
              )
            }
          </div>
          <Link
            href="/atheletic/set-fullscreen"
            prefetch
          >
            <div className={[
              "hover:font-semibold cursor-pointer transition-all h-7 w-7 flex items-center justify-center",
            ].join(" ")}>
              <svg width="14" height="14" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M2.42383 16.1471H4.42383C4.70716 16.1471 4.94466 16.2429 5.13633 16.4346C5.32799 16.6263 5.42383 16.8638 5.42383 17.1471C5.42383 17.4304 5.32799 17.6679 5.13633 17.8596C4.94466 18.0513 4.70716 18.1471 4.42383 18.1471H1.42383C1.14049 18.1471 0.902995 18.0513 0.711328 17.8596C0.519661 17.6679 0.423828 17.4304 0.423828 17.1471V14.1471C0.423828 13.8638 0.519661 13.6263 0.711328 13.4346C0.902995 13.2429 1.14049 13.1471 1.42383 13.1471C1.70716 13.1471 1.94466 13.2429 2.13633 13.4346C2.32799 13.6263 2.42383 13.8638 2.42383 14.1471V16.1471ZM16.4238 16.1471V14.1471C16.4238 13.8638 16.5197 13.6263 16.7113 13.4346C16.903 13.2429 17.1405 13.1471 17.4238 13.1471C17.7072 13.1471 17.9447 13.2429 18.1363 13.4346C18.328 13.6263 18.4238 13.8638 18.4238 14.1471V17.1471C18.4238 17.4304 18.328 17.6679 18.1363 17.8596C17.9447 18.0513 17.7072 18.1471 17.4238 18.1471H14.4238C14.1405 18.1471 13.903 18.0513 13.7113 17.8596C13.5197 17.6679 13.4238 17.4304 13.4238 17.1471C13.4238 16.8638 13.5197 16.6263 13.7113 16.4346C13.903 16.2429 14.1405 16.1471 14.4238 16.1471H16.4238ZM2.42383 2.14709V4.14709C2.42383 4.43043 2.32799 4.66793 2.13633 4.85959C1.94466 5.05126 1.70716 5.14709 1.42383 5.14709C1.14049 5.14709 0.902995 5.05126 0.711328 4.85959C0.519661 4.66793 0.423828 4.43043 0.423828 4.14709V1.14709C0.423828 0.863761 0.519661 0.626261 0.711328 0.434595C0.902995 0.242928 1.14049 0.147095 1.42383 0.147095H4.42383C4.70716 0.147095 4.94466 0.242928 5.13633 0.434595C5.32799 0.626261 5.42383 0.863761 5.42383 1.14709C5.42383 1.43043 5.32799 1.66793 5.13633 1.85959C4.94466 2.05126 4.70716 2.14709 4.42383 2.14709H2.42383ZM16.4238 2.14709H14.4238C14.1405 2.14709 13.903 2.05126 13.7113 1.85959C13.5197 1.66793 13.4238 1.43043 13.4238 1.14709C13.4238 0.863761 13.5197 0.626261 13.7113 0.434595C13.903 0.242928 14.1405 0.147095 14.4238 0.147095H17.4238C17.7072 0.147095 17.9447 0.242928 18.1363 0.434595C18.328 0.626261 18.4238 0.863761 18.4238 1.14709V4.14709C18.4238 4.43043 18.328 4.66793 18.1363 4.85959C17.9447 5.05126 17.7072 5.14709 17.4238 5.14709C17.1405 5.14709 16.903 5.05126 16.7113 4.85959C16.5197 4.66793 16.4238 4.43043 16.4238 4.14709V2.14709Z" fill="rgb(var(--color-text) / 1)"/>
              </svg>
            </div>
          </Link>
        </div>
        {
          eventCurrent.length ? (
            <div className="flex flex-col gap-1">
              <section 
                className={[
                  "rounded overflow-hidden flex flex-row",
                  "bg-gradient-to-r from-[#6466F1] to-[#adadad]"
                ].join(" ")}
                style={{
                  "--tw-gradient-from-position": `${eventSetStart - 50}%`,
                  "--tw-gradient-to-position": `${150 - eventSetEnd}%`,
                } as DetailedHTMLProps<HTMLAttributes<HTMLElement>, HTMLElement>}
              >
                {
                  [eventSetsScore.blue, eventSetsScore.white].map((v, i) => {
                    return (
                      <article 
                        key={i}
                        className={[
                          "h-full transition-all px-4 py-3 flex flex-col justify-center select-none cursor-pointe w-full",
                          i === 0 ? "items-start" : "items-end"
                        ].join(" ")}
                      >
                        <p className="text-sm whitespace-nowrap text-[#fff]">
                          {i === 0 ? `📘 ${eventTeams.left}` : `${eventTeams.right} 📖`}
                        </p>
                        <figure className="flex flex-row items-end gap-1">
                          <p className="text-sm -translate-y-1 whitespace-nowrap text-[#fff]">세트</p>
                          <p className="text-2xl font-semibold whitespace-nowrap text-[#fff]">{v === -1 ? "Loading" : v.toLocaleString()}</p>
                          <p className="text-sm -translate-y-1 whitespace-nowrap text-[#fff]">승</p>
                        </figure>
                        <p className="text-sm whitespace-nowrap text-[#fff]">{
                          v === -1 ? "Loading" : 
                            i === 0 ? eventScore.blue.toLocaleString() : eventScore.white.toLocaleString()
                        }점</p>
                      </article>
                    );
                  })
                }
              </section>
            </div>
          ) : (
            <section className={[
              "flex flex-col gap-4 bg-white rounded border border-text/10 p-5 overflow-auto justify-center items-center",
              loading && !autoRefresh ? "loading_background" : "",
            ].join(" ")}>
              <p className="text-center px-4 whitespace-nowrap text-text/50">진행 중인 경기가 없습니다.</p>
            </section>
          )
        }
      </article>
      <section className="flex flex-col gap-3">
        <section className="flex flex-col gap-1">
          <h1 className="text-xl font-semibold">점수 기록</h1>
        </section>
        <section className={[
          "flex flex-col gap-4 bg-white rounded border border-text/10 p-5 overflow-auto ",
          loading && !autoRefresh ? "loading_background" : "",
        ].join(" ")}>
          <table className="w-full overflow-auto">
            <tbody className="w-full border-y border-text/10 overflow-auto">
              <tr className="w-full">
                <th className="text-center px-4 whitespace-nowrap py-2 font-semibold w-full" colSpan={3}>
                    승점 획득 현황 ({time.format("YYYY-MM-DD HH:mm")} 기준)
                </th>
              </tr>
              {
                scoreDescriptions?.length ? scoreDescriptions.map((v, i) => (
                  <tr 
                    className={[
                      "w-full border-y border-text/10",
                    ].join(" ")}
                    key={i}
                  >
                    <td className="text-center px-4 whitespace-nowrap py-2 font-semibold text-inherit">
                      {v.team === "white" ? "백팀" : "청팀"}
                    </td>
                    <td className="px-4 select-none text-left border-x border-text/10 text-inherit">
                      {v.score > 0 ? `+${v.score}` : v.score}점
                    </td>
                    <td className="w-full text-left px-4 text-inherit">
                      {v.description}
                    </td>
                  </tr>
                )) : (
                  <tr className="w-full border-y border-text/10">
                    <td className="text-center px-4 whitespace-nowrap py-2 text-text/50" colSpan={3}>승점 획득 내역이 없습니다.</td>
                  </tr>
                )
              }
            </tbody>
          </table>
        </section>
      </section>
    </>
  );
};


export default Score;